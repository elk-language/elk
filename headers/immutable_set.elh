##[
	An interface that represents an unordered, immutable collection
	of unique elements.
]##
interface ::Std::ImmutableSet[+Element]
	implement ImmutableCollection[Element]

	# Base methods

	##[
		Return the union of both sets.

		Create a new set containing all the elements
		present in `self` and `other`.
	]##
	def +[E](other: ImmutableSet[E]): ImmutableSet[Element | E]; end
	alias | +

	##[
		Return the intersection of both sets.

		Create a new set containing only the elements
		present both in `self` and `other`.
	]##
	def &[E](other: ImmutableSet[E]): ImmutableSet[Element & E]; end

	##[
		Iterates over the elements of this set,
		yielding them to the given closure.

		Returns a new ImmutableSet that consists of the elements returned
		by the given closure.
	]##
	def map[E](fn: |element: Element|: E): ImmutableSet[E]; end

	##[
		Provides default implementations of optional set methods.
	]##
	abstract mixin Base[+Element]
		implement ImmutableSet[Element]
		include ImmutableCollection::Base[Element]

		def &[E](other: ImmutableSet[E]): ImmutableSet[Element & E]; end
		def +[E](other: ImmutableSet[E]): ImmutableSet[Element | E]; end
		def map[E](fn: |element: Element|: E): ImmutableSet[E]; end
	end
end
