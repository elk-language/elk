##[
	An interface that represents objects
	that allow for external iteration.
]##
interface ::Std::Iterator[+Val, +Err = never]
	implement Iterable[Val, Err]

	##[
		Returns the next element.
		Throws `:stop_iteration` when no more elements are available.
	]##
	def next: Val ! :stop_iteration | Err; end

	# Base methods

	def iter: self; end

	##[
		Provides default implementations of most iterator methods.
	]##
	abstract mixin Base[+Val, +Err = never]
		implement Iterator[Val, Err]
		include Iterable::Base[Val, Err]

		def iter: self; end
	end
end

##[
	An interface that represents iterators that can be reset.
]##
interface ::Std::ResettableIterator[+Val, +Err = never]
	implement Iterator[Val, Err]

	##[
		Resets the state of the iterator.
	]##
	def reset; end

	##[
		Provides default implementations of most resettable iterator methods.
	]##
	abstract mixin Base[+Val, +Err = never]
		implement ResettableIterator[Val, Err]
		include Iterator::Base[Val, Err]
	end
end
