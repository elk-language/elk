##[
	Represents an interned string.

	A symbol is an integer ID that is associated
	with a particular name (string).

	A few symbols with the same name refer to the same ID.

	Comparing symbols happens in constant time, so it's
	usually faster than comparing strings.
]##
sealed noinit primitive class ::Std::Symbol < Value
	implement Hashable

	sealed def ==(other: any): bool; end

	##[
		Returns the string associated with this symbol.
	]##
	def to_string: String; end
	alias name to_string

	##[
		Returns itself.
	]##
	def to_symbol: Symbol; end

	##[
		Calculates a hash of the symbol.
	]##
	def hash: UInt64; end

	##[
		Return a human readable string
		representation of this object
		for debugging etc.
	]##
	def inspect: String; end

	##[
		Returns the AST Node that represents the same value.
	]##
	def to_ast_node: Elk::AST::SimpleSymbolLiteralNode; end
	alias to_ast_expr_node to_ast_node,
			  to_ast_pattern_node to_ast_node,
				to_ast_type_node to_ast_node
end
