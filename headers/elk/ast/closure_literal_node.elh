module Std::Elk::AST
  ##[
    Represents a closure eg. `|i| -> println(i)`, `|i| ~> println(i)`
  ]##
  sealed primitive class ClosureLiteralNode
    include ExpressionNode

    init(
      parameters: ArrayTuple[ParameterNode] = loop; end,
      return_type: TypeNode? = nil,
      throw_type: TypeNode? = nil,
      body: ArrayTuple[StatementNode] = loop; end,
      lambda: bool = false,
      location: FS::Location = loop; end,
    ); end

    def parameters: ArrayTuple[ParameterNode]; end
    def return_type: TypeNode?; end
    def throw_type: TypeNode?; end
    def body: ArrayTuple[StatementNode]; end
    def lambda: bool; end
    def location: FS::Location; end
  end
end
