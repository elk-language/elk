module Std::Elk::AST
  ##[
    Represents a class declaration eg. `class Foo; end`
  ]##
  sealed primitive class ClassDeclarationNode
    include ExpressionNode

    init(
      doc_comments: String,
      is_abstract: Bool,
      is_sealed: Bool,
      is_primitive: Bool,
      is_no_init: Bool,
      constant: ExpressionNode,
      type_parameters: ArrayTuple[TypeParameterNode],
      superclass: ExpressionNode,
      body: ArrayTuple[StatementNode],
      span: String::Span = loop; end
    ); end

    def is_abstract: Bool; end
    def is_sealed: Bool; end
    def is_primitive: Bool; end
    def is_no_init: Bool; end
    def constant: ExpressionNode; end
    def type_parameters: ArrayTuple[TypeParameterNode]; end
    def superclass: ExpressionNode; end
    def body: ArrayTuple[StatementNode]; end
    def span: String::Span; end
  end
end
