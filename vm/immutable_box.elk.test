using Std::Test::Assertions::*
using Std::Test::*

describe "ImmutableBox", ->
	context "init", ->
		should "create a new box", ->
			b := ImmutableBox(3)
			assert! b <<: ImmutableBox
			assert! b.get == 3
		end
	end

	context "get", ->
		should "return the stored value", ->
			b := ImmutableBox(3)
			assert! b.get == 3

			c := ImmutableBox("foo")
			assert! c.get == "foo"
		end
	end

	context "next", ->
		should "return the next box", ->
			arr := [3, 5, 8]
			a := arr.immutable_box_of(0)
			assert! a.get == 3

			b := a.next
			assert! b.get == 5
		end

		should "return the second next box", ->
			arr := [3, 5, 8]
			a := arr.immutable_box_of(0)
			assert! a.get == 3

			b := a.next(2)
			assert! b.get == 8
		end
	end

	context "prev", ->
		should "return the previous box", ->
			arr := [3, 5, 8]
			a := arr.immutable_box_of(-1)
			assert! a.get == 8

			b := a.prev
			assert! b.get == 5
		end

		should "return the second previous box", ->
			arr := [3, 5, 8]
			a := arr.immutable_box_of(-1)
			assert! a.get == 8

			b := a.prev(2)
			assert! b.get == 3
		end
	end

	context "address", ->
		should "return the raw address as UInt", ->
			b := ImmutableBox(3)
			addr := b.address
			assert! addr <<: UInt

			c := ImmutableBox.at(addr)
			assert! b.get == 3
		end
	end

	context "at", ->
		should "return the raw address as UInt", ->
			b := ImmutableBox(3)
			c := ImmutableBox.at(b.address)
			assert! c.get == 3

			e := ImmutableBox(2.5)
			f := ImmutableBox.at(e.address)
			assert! f.get == 2.5
		end
	end

	context "to_immutable_box", ->
		should "return self", ->
			b := ImmutableBox(3)
			c := b.to_immutable_box
			assert! c === b
			assert! c.get == 3
		end
	end

end
