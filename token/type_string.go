// Code generated by "stringer -type=Type"; DO NOT EDIT.

package token

import "strconv"

func _() {
}

const _Type_name = "ZERO_VALUEERROREND_OF_FILENEWLINESEMICOLONCOMMADOTQUESTION_DOTDOT_DOTQUESTION_DOT_DOTCOLONQUESTIONLABEL_OP_BEGTHIN_ARROWWIGGLY_ARROWTHICK_ARROWLABEL_ASSIGN_OP_BEGEQUAL_OPMINUS_EQUALPLUS_EQUALSTAR_EQUALSLASH_EQUALSTAR_STAR_EQUALTILDE_EQUALAND_AND_EQUALAND_EQUALOR_OR_EQUALOR_EQUALXOR_EQUALQUESTION_QUESTION_EQUALLBITSHIFT_EQUALLTRIPLE_BITSHIFT_EQUALRBITSHIFT_EQUALRTRIPLE_BITSHIFT_EQUALPERCENT_EQUALCOLON_EQUALLABEL_ASSIGN_OP_ENDLPARENRPARENLBRACERBRACELBRACKETQUESTION_LBRACKETRBRACKETSCOPE_RES_OPCOLON_COLON_LBRACKETDOT_COLONCLOSED_RANGE_OPOPEN_RANGE_OPRIGHT_OPEN_RANGE_OPLEFT_OPEN_RANGE_OPPIPE_OPAND_ANDAND_BANGOR_OROR_BANGNOT_EQUALLAX_NOT_EQUALSTRICT_EQUALSTRICT_NOT_EQUALQUESTION_QUESTIONBANGISA_OPREVERSE_ISA_OPINSTANCE_OF_OPREVERSE_INSTANCE_OF_OPLABEL_OVERRIDABLE_OP_BEGPLUS_PLUSMINUS_MINUSPLUS_ATMINUS_ATMINUSPLUSSTARSLASHSTAR_STARLESSLESS_EQUALGREATERGREATER_EQUALSPACESHIP_OPEQUAL_EQUALLAX_EQUALTILDEANDAND_TILDEORXORLBITSHIFTLTRIPLE_BITSHIFTRBITSHIFTRTRIPLE_BITSHIFTPERCENTLABEL_OP_ENDLABEL_IDENTIFIER_BEGPUBLIC_IDENTIFIERPRIVATE_IDENTIFIERPUBLIC_CONSTANTPRIVATE_CONSTANTLABEL_IDENTIFIER_ENDINSTANCE_VARIABLESPECIAL_IDENTIFIERLABEL_LITERAL_BEGLABEL_SPECIAL_COLLECTION_LITERAL_BEGWORD_ARRAY_LIST_BEGWORD_ARRAY_LIST_ENDSYMBOL_ARRAY_LIST_BEGSYMBOL_ARRAY_LIST_ENDHEX_ARRAY_LIST_BEGHEX_ARRAY_LIST_ENDBIN_ARRAY_LIST_BEGBIN_ARRAY_LIST_ENDWORD_HASH_SET_BEGWORD_HASH_SET_ENDSYMBOL_HASH_SET_BEGSYMBOL_HASH_SET_ENDHEX_HASH_SET_BEGHEX_HASH_SET_ENDBIN_HASH_SET_BEGBIN_HASH_SET_ENDWORD_ARRAY_TUPLE_BEGWORD_ARRAY_TUPLE_ENDSYMBOL_ARRAY_TUPLE_BEGSYMBOL_ARRAY_TUPLE_ENDHEX_ARRAY_TUPLE_BEGHEX_ARRAY_TUPLE_ENDBIN_ARRAY_TUPLE_BEGBIN_ARRAY_TUPLE_ENDLABEL_SPECIAL_COLLECTION_LITERAL_ENDHASH_SET_LITERAL_BEGTUPLE_LITERAL_BEGRECORD_LITERAL_BEGDOC_COMMENTRAW_STRINGCHAR_LITERALRAW_CHAR_LITERALREGEX_BEGREGEX_CONTENTREGEX_INTERP_BEGREGEX_INTERP_ENDREGEX_ENDLABEL_REGEX_FLAG_BEGREGEX_FLAG_iREGEX_FLAG_mREGEX_FLAG_UREGEX_FLAG_aREGEX_FLAG_xREGEX_FLAG_sLABEL_REGEX_FLAG_ENDSTRING_BEGSTRING_CONTENTSTRING_INTERP_LOCALSTRING_INTERP_CONSTANTSTRING_INTERP_BEGSTRING_INSPECT_INTERP_BEGSTRING_INSPECT_INTERP_CONSTANTSTRING_INSPECT_INTERP_LOCALSTRING_INTERP_ENDSTRING_ENDLABEL_INT_LITERAL_BEGINTINT64UINT64INT32UINT32INT16UINT16INT8UINT8LABEL_INT_LITERAL_ENDLABEL_FLOAT_LITERAL_BEGFLOATBIG_FLOATFLOAT64FLOAT32LABEL_FLOAT_LITERAL_ENDLABEL_LITERAL_ENDLABEL_KEYWORD_BEGNILFALSETRUEIFELSEELSIFUNLESSWHILEUNTILLOOPFORFORNUMINBREAKCONTINUERETURNYIELDASYNCAWAITGODEFSIGENDTHENINITNOINITCLASSSTRUCTMODULEMIXININTERFACEINCLUDEIMPLEMENTEXTENDENUMTYPETYPEDEFTYPEOFVARVALCONSTTHROWTRYCATCHDOFINALLYALIASASISSELFSUPERSWITCHCASEMATCHWITHUSINGBREAKPOINTGETTERSETTERATTRMUSTSINGLETONABSTRACTSEALEDVOIDNEVERNOTHINGANYPRIMITIVENATIVEDEFAULTMACROBOOLNEWIMPORTWHEREUNTYPEDUNCHECKEDGOTOQUOTEUNQUOTEUNQUOTE_PATTERNUNQUOTE_TYPELABEL_KEYWORD_END"

var _Type_index = [...]uint16{0, 10, 15, 26, 33, 42, 47, 50, 62, 69, 85, 90, 98, 110, 120, 132, 143, 162, 170, 181, 191, 201, 212, 227, 238, 251, 260, 271, 279, 288, 311, 326, 348, 363, 385, 398, 409, 428, 434, 440, 446, 452, 460, 477, 485, 497, 517, 526, 541, 554, 573, 591, 598, 605, 613, 618, 625, 634, 647, 659, 675, 692, 696, 702, 716, 730, 752, 776, 785, 796, 803, 811, 816, 820, 824, 829, 838, 842, 852, 859, 872, 884, 895, 904, 909, 912, 921, 923, 926, 935, 951, 960, 976, 983, 995, 1015, 1032, 1050, 1065, 1081, 1101, 1118, 1136, 1153, 1189, 1208, 1227, 1248, 1269, 1287, 1305, 1323, 1341, 1358, 1375, 1394, 1413, 1429, 1445, 1461, 1477, 1497, 1517, 1539, 1561, 1580, 1599, 1618, 1637, 1673, 1693, 1710, 1728, 1739, 1749, 1761, 1777, 1786, 1799, 1815, 1831, 1840, 1860, 1872, 1884, 1896, 1908, 1920, 1932, 1952, 1962, 1976, 1995, 2017, 2034, 2059, 2089, 2116, 2133, 2143, 2164, 2167, 2172, 2178, 2183, 2189, 2194, 2200, 2204, 2209, 2230, 2253, 2258, 2267, 2274, 2281, 2304, 2321, 2338, 2341, 2346, 2350, 2352, 2356, 2361, 2367, 2372, 2377, 2381, 2384, 2390, 2392, 2397, 2405, 2411, 2416, 2421, 2426, 2428, 2431, 2434, 2437, 2441, 2445, 2451, 2456, 2462, 2468, 2473, 2482, 2489, 2498, 2504, 2508, 2512, 2519, 2525, 2528, 2531, 2536, 2541, 2544, 2549, 2551, 2558, 2563, 2565, 2567, 2571, 2576, 2582, 2586, 2591, 2595, 2600, 2610, 2616, 2622, 2626, 2630, 2639, 2647, 2653, 2657, 2662, 2669, 2672, 2681, 2687, 2694, 2699, 2703, 2706, 2712, 2717, 2724, 2733, 2737, 2742, 2749, 2764, 2776, 2793}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
